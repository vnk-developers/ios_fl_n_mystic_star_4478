// lib/main.dart
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:mystic_star_journey/features/onboard/data/onboarding_prefs.dart';
import 'core/router/app_router.dart';
import 'package:go_router/go_router.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await SystemChrome.setPreferredOrientations([DeviceOrientation.portraitUp]);
  runApp(const ProviderScope(child: App()));
}

class App extends ConsumerStatefulWidget {
  const App({super.key});

  @override
  ConsumerState<App> createState() => _AppState();
}

class _AppState extends ConsumerState<App> {
  GoRouter? _router; // üëà –∫–µ—à

  @override
  void initState() {
    super.initState();
    // –Ø–∫ —Ç—ñ–ª—å–∫–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä –≤—ñ–¥–¥–∞—Å—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äî –æ–¥–∏–Ω —Ä–∞–∑ —Å—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ—É—Ç–µ—Ä.
    ref
        .read(onboardingSeenProvider.future)
        .then((seen) {
          if (mounted && _router == null) {
            setState(() {
              _router = createAppRouter(seenOnboarding: seen);
            });
          }
        })
        .catchError((_) {
          if (mounted && _router == null) {
            setState(() {
              _router = createAppRouter(seenOnboarding: false);
            });
          }
        });
  }

  @override
  Widget build(BuildContext context) {
    // –ü–æ–∫–∏ –Ω–µ –≥–æ—Ç–æ–≤–∏–π —Ä–æ—É—Ç–µ—Ä ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ—Å—Ç–∏–π –µ–∫—Ä–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.
    if (_router == null) {
      return const MaterialApp(
        debugShowCheckedModeBanner: false,
        home: ColoredBox(
          color: Colors.black,
          child: Center(child: CircularProgressIndicator()),
        ),
      );
    }

    return MaterialApp.router(
      title: 'Whispers of Flame',
      debugShowCheckedModeBanner: false,
      routerConfig: _router!, // üëà –Ω–µ —Å—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–Ω–æ–≤–æ
      theme: _buildTheme(),
    );
  }

  ThemeData _buildTheme() {
    final base = ThemeData(brightness: Brightness.dark, useMaterial3: true);
    return base.copyWith(
      colorScheme: ColorScheme.fromSeed(
        seedColor: const Color(0xFFAF8E53),
        brightness: Brightness.dark,
      ),
      textTheme: GoogleFonts.interTextTheme(base.textTheme),
    );
  }
}
